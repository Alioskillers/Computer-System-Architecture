{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red232\green232\blue231;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c92651\c92651\c92535;\cssrgb\c0\c1\c1;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid102\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww14000\viewh14980\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\sa160\partightenfactor0

\f1\b \cf2 \expnd0\expndtw0\kerning0
.data Section\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
a:
\f0\b0 \cf2  An array [
\f1\b \cf2 a]
\f0\b0 \cf2  with elements \{4, 9, 10, 10, 15, 2, 3\}.\
\ls1\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
b:
\f0\b0 \cf2  An array [
\f1\b \cf2 b]
\f0\b0 \cf2  with all elements initialized to 0. This array will be rearranged to match the values of array [
\f1\b \cf2 a]
\f0\b0 \cf2 .\
\ls1\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
length:
\f0\b0 \cf2  Stores the length of the arrays ([
\f1\b \cf2 a]
\f0\b0 \cf2  and [
\f1\b \cf2 b]
\f0\b0 \cf2 ), which is 7.\
\ls1\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
key:
\f0\b0 \cf2  Stores the value of the key that will be searched for in array [
\f1\b \cf2 a]
\f0\b0 \cf2 .\
\pard\pardeftab720\sa160\partightenfactor0

\f1\b \cf2 .text Section\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
main:
\f0\b0 \cf2  Here is where the main program is executed.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 	\expnd0\expndtw0\kerning0
\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
It sets up registers with the addresses of arrays [
\f1\b \cf2 a]
\f0\b0 \cf2 ,[ 
\f1\b \cf2 b]
\f0\b0 \cf2 , the length of the arrays, and the key to search for.\
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
Then it calls three functions: 
\f1\b \cf2 rep1torep2
\f0\b0 \cf2 , 
\f1\b \cf2 rep2torep1
\f0\b0 \cf2 , and 
\f1\b \cf2 search
\f0\b0 \cf2 .\
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
Finally, it exits the program using 
\f1\b syscall
\f0\b0 .\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
rep1torep2:
\f0\b0 \cf2  This function recursively copies elements from array [
\f1\b \cf2 a]
\f0\b0 \cf2  to array [
\f1\b \cf2 b]
\f0\b0 \cf2 .\
\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
It takes the address of array [
\f1\b \cf2 a]
\f0\b0 \cf2  as input.\
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
It recursively iterates through array [
\f1\b \cf2 a]
\f0\b0 \cf2 , doubling each index (
\f1\b \cf2 i
\f0\b0 \cf2 ) and adding 1, until it reaches the end of the array.\
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
For each index, it calculates the corresponding index in array [
\f1\b \cf2 b]
\f0\b0 \cf2  and copies the value from array [
\f1\b \cf2 a]
\f0\b0 \cf2  to array [
\f1\b \cf2 b]
\f0\b0 \cf2 .\
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
After copying, it returns.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
rep2torep1:
\f0\b0 \cf2  This function recursively rearranges elements in array [
\f1\b \cf2 b]
\f0\b0 \cf2  based on certain conditions.\
\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
It takes parameters including the level, height, and the length of the array.\
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
It loops over array [
\f1\b \cf2 b]
\f0\b0 \cf2 , setting specific elements to -1 based on a pattern.\
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
It uses recursive calls and nested loops to iterate over and work with array [b].\
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
After rearranging, it returns.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f1\b \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
search:
\f0\b0 \cf2  This function searches for a specific key in array [
\f1\b \cf2 a]
\f0\b0 \cf2 .\
\ls2\ilvl0\kerning1\expnd0\expndtw0 	\expnd0\expndtw0\kerning0
\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf4 \expnd0\expndtw0\kerning0
it loops over array [a] \cf2 until it finds the key or reaches the end of the array.\
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
If the key is found, it returns the index of where it was found. If not found, it returns -1.\cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Main:\
\
$s0: array a\
$s1: array b\
$s4: length\
$s5: key\
$v0: 10\
\
Rep1torep2:\
\
$s3: index=0\
$s4: int i=0\
$a2: a[i]\
$t0: index\
$a2= b[index]=a[i]\
$t1: index++\
$a0: i=i*2+1\
$s5: i=i*2+2\
\
Rep2torep1:\
\
$a1: level\
$a2: height\
$t0: L\
$s0: array a\
$s1: array b\
$a0: int i=0\
$a1: level=0\
$a3: j=level\
$t2: a[j]\
$t4= b[i]\
$t2: a[j]= -1\
$a1: i++\
$t5: height - level\
$t6: 2\
$t6: 2^(height - level)\
$a3: j + 2^(height - level)\
$a3: j + 2^(height - level) - 1\
$t7: a[j]\
$a3: j++\
$a1: level++\
\
Search:\
\
$a0: int i=0\
$t0: a[i]\
$a0: i++\
$v0: i\
$v0: -1}